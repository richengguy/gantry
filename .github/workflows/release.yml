name: Build a new release.

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - published

jobs:
  build-dist:
    name: Build gantry release.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run 'build' to generate source distribution and Python wheel.
        run: |
          conda env create
          conda run -n gantry --live-stream pip install --upgrade pip setuptools build
          conda run -n gantry --live-stream python -m build --sdist --wheel

      - name: Upload build artifacts.
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist
          if-no-files-found: error

  generate-schemas:
    name: Generate JSON schema package.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Export the JSON schemas from gantry.
        run: |
          conda env create
          conda run -n gantry --live-stream pip install --upgrade pip setuptools
          conda run -n gantry --live-stream pip install .
          conda run -n gantry --live-stream gantry schemas export

      - name: Create schemas archive.
        run: tar -czvf schemas.tar.gz schemas

      - name: Upload build artifacts.
        uses: actions/upload-artifact@v3
        with:
          name: schemas
          path: schemas.tar.gz
          if-no-files-found: error

  update-release:
    name: Attach artifacts to release.
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' }}
    needs:
      - build-dist
      - generate-schemas
    steps:
      - uses: actions/checkout@v3

      - name: Download build artifacts.
        uses: actions/download-artifact@v3

      - name: Parse version tag.
        id: version
        run: echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"

      - name: Attach artifacts to release.
        run: |
          echo "Attaching artifacts to ${RELEASE_TAG}."
          wheel=$(ls build-artifacts/*.whl)
          sdist=$(ls build-artifacts/*.tar.gz)
          gh release upload ${RELEASE_TAG} \
            "schemas/schemas.tar.gz#Service Definition Schemas" \
            "${wheel}#Python Wheel" \
            "${sdist}#Source Distribution"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ steps.version.outputs.tag }}
